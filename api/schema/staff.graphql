enum StaffRole
  @goModel(model: "github.com/looped-dev/cms/api/models.StaffRole") {
  """
  Has full site access and is the owner of the site and cannot be deleted.
  """
  OWNER
  """
  Trusted staff user who should be able to manage all content and users, as well
  as site settings and options.
  """
  ADMINISTRATOR
  """
  Can invite and manage other Authors and Contributors, as well as edit and
  publish any posts on the site.
  """
  EDITOR
  """
  A trusted user who can create, edit and publish their own posts, but canâ€™t
  modify others.
  """
  AUTHOR
}

type Staff @goModel(model: "github.com/looped-dev/cms/api/models.StaffMember") {
  id: MongoID!
  name: String!
  email: Email!
  emailVerified: Boolean!
  role: StaffRole! @goField(forceResolver: true)
  createdAt: MongoTime!
  updatedAt: MongoTime!
}

input StaffRegisterInput {
  name: String!
  email: Email!
  password: String!
  role: StaffRole!
}

input StaffLoginInput {
  email: Email!
  password: String!
}

input StaffInviteInput {
  email: Email!
  role: StaffRole!
}

input StaffAcceptInviteInput {
  email: String!
  name: String!
  password: String!
  confirmPassword: String!
  code: String!
}

input StaffUpdateInput {
  name: String!
  email: Email!
}

input StaffDeleteInput {
  id: ID!
}

input StaffChangePasswordInput {
  id: ID!
  password: String!
  confirmPassword: String!
}

type StaffLoginResponse {
  staff: Staff!
  accessToken: String!
  refreshToken: String!
}

input StaffResetPasswordInput {
  email: Email!
  code: String!
  password: String!
  confirmPassword: String!
}

input StaffForgotPasswordInput {
  email: Email!
}

input StaffSetupInput {
  siteName: String!
  name: String!
  email: Email!
  password: String!
}

type SetupResponse {
  staff: Staff!
  accessToken: String!
  refreshToken: String!
}

extend type Mutation {
  staffLogin(input: StaffLoginInput!): StaffLoginResponse!
  staffInvite(input: StaffInviteInput!): Staff!
  staffAcceptInvite(input: StaffAcceptInviteInput!): Staff!
  staffUpdate(input: StaffUpdateInput!): Staff!
  staffDelete(input: StaffDeleteInput!): Staff!
  staffChangePassword(input: StaffChangePasswordInput!): Staff!
  staffResetPassword(input: StaffResetPasswordInput!): Staff!
  staffForgotPassword(input: StaffForgotPasswordInput!): Staff!
  staffLogout: Boolean!
}
